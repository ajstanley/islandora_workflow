<?php
/**
 * @file
 * @author: William Panting
 * @date: 17/05/2011
 * This module is intended to implement a generic Islandora workflow around the creation and publication of objects.
 */

/**
 * This generates the main workflow page
 * @return $page: The html of the page to return
 */
function islandora_workflow_work() {
  $page='';
  $page=$page ."<p>HelloWorld1</p>";
  return $page;
}

/**
 * The menu entries for this module.
 * @return $menuEntries: An arrray of the items to be added to the drupal menu
 */
function islandora_workflow_menu() {
  $menuEntries= array();
  //settings associated with islandora_workflow
  $menuEntries['admin/settings/islandora_workflow_opts']=array(
    'title' => t('Islandora workflow settings'),
    'description' => t('Here you can change various settings for the islandora_workflow module.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_workflow_admin'),
    'access arguments' => array('islandora_workflow_Administrator'),
    'type' => MENU_NORMAL_ITEM
  );
    //settings associated with islandora_workflow and collection permissions
  $menuEntries['admin/settings/islandora_workflow_perms']=array(
    'title' => t('Islandora workflow permissions'),
    'description' => t('Here you can assign permissions to roles on a collection by collection level.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_workflow_collection_permissions'),
    'access callback' => 'islandora_wokflow_check_permissions',
    'access arguments' => array('islandora_workflow_Administrator', 'islandora_workflow_Manager'),
    'type' => MENU_NORMAL_ITEM
  );
  //main working page for islandora_workflow
  $menuEntries['islandora_workflow']=array(
    'title' => t('My Islandora work'),
    'description' => t('This is the main access point to islandora_workflow'),
    'page callback' => 'islandora_workflow_work',
    'access callback' => 'islandora_wokflow_check_permissions',
    'access arguments' => array('islandora_workflow_Administrator', 'islandora_workflow_Editor', 'islandora_workflow_Manager', 'islandora_workflow_Submitter'),
    'type' => MENU_NORMAL_ITEM
   );
 return $menuEntries;
}

/**
 * This function is the access callback used for access to the workflow section of this module
 * @param $permission_array: those user roles to allow access
 * @return $bool: wheather or not to permit access
 */
function islandora_wokflow_check_permissions($permission_array) {  
  //loop through permissions allowed
  for ($i=0; $i<sizeof($permission_array);$i++) {
    //return true if the user has an allowed permission
    if (user_access($arr_perms[$i])) {
      return TRUE;
    }
  }
  //if no permission matched then return false
  return FALSE;
}

/**
 * This function returns the form that will let an administrator modify the module's settings
 * @return $adminForm: the form for edditing islandora_workflow settings.
 */
function islandora_workflow_admin() {
  $adminForm=array();
  //security setting ie. xacml enforced on/off
  $adminForm['islandora_workflow_enforce_security']= array(
    '#type' => 'checkbox',
    '#title' => t('Enforce Security'),
    '#default_value' => variable_get('islandora_workflow_enforce_security', 0),
    '#description' => t("Wheather or not to use XACML to enforce workflow."),
  ); 
  return system_settings_form($adminForm); 
}

/**
 * drupal permission hook
 * The list of avaialble permissions for this module.
 * @return array: The list of permissions.
 */
function islandora_workflow_perm() {
  return array('islandora_workflow_Administrator', 'islandora_workflow_Editor', 'islandora_workflow_Manager', 'islandora_workflow_Submitter');
}

/**
 * drupal hook to show help
 * @param $path: The path that the help is being accessed from.
 * @return $help: The help string that will be returned to the user.
 */
function islandora_workflow_help($path, $arg) {
  $help='';//default
  
  switch ($path) {
    case 'admin/modules#description' :
    $help= t('A generic workflow module for Fedora objects.');
  }
  
  return $help;
}

/**
 * This function registers themeing functions with Drupal.
 * @return array $themes: the array of available themes
 */
function islandora_workflow_theme() {
   $themes=array();
   $themes['permissions_table']=array(
   'arguments' => array('list' => NULL, 'form' => NULL),
   'template' => 'permissions_table'
    );
   return $themes;
 }
 
 /**
  * This function handles making variables available to the theme template for 
  * the islandora_workflow_collection_permissions page
  * @param array ref $vars: the list of variables (including the form) to send to the template
  * @return array $vars: the modified list of variables to send to the template
  */
function islandora_workflow_preprocess_permissions_table(&$vars) {
  $vars['table_elems']=drupal_render($vars['list'][3]['Awill:257']);
}
 
 /**
 * This generates the page for editing collection level permissions
 * @return $collection_permissions_form: The form for changing collection permissions granted to roles
 */
function islandora_workflow_collection_permissions() {
  //init
  module_load_include('inc', 'islandora_workflow', 'islandora_workflow'); 
  $collection_permissions_form=array();
  $current_collection_permissions=array();
  
  //collect current state data
  $my_collections=get_all_collections();//change this to get users perms when that func is done
  $current_collection_permissions=islandora_workflow_get_roles_with_module_permissions();
  
  $collection_permissions_form['islandora_workflow_collection_permissions_table'] = array(
    '#type' => 'fieldset',
    '#title' => t('Collecion Permissions'),
    '#collapsible' => FALSE,
    '#collapsed' => FALSE,
    '#tree' => TRUE, // this attribute is important to return the submitted values in a deeper nested arrays in $form_state['values'] . See http://drupal.org/node/751826
    '#description' => t('Assign collection level permissions to roles.'), // doesn't work with table render.
  );
  //theme
  $collection_permissions_form['islandora_workflow_collection_permissions_table']['permissions_table']=array(
  '#theme' => 'permissions_table'  
  );
  
  foreach ($current_collection_permissions as $role_pid => $role_name) {
    foreach ($my_collections as $collection_pid => $collection_name) {
      $collection_permissions_form['islandora_workflow_collection_permissions_table']['permissions_table'][$role_pid][$collection_pid] = array(
      	'#type' => 'select',
      	'#default_value' => $current_collection_permissions[$role_pid][key($role_name)][0],//make this into whatever the current setting is
       '#options' => $current_collection_permissions[$role_pid][key($role_name)],
      );
    }
  }
  
  $collection_permissions_form['#submit'][] = 'islandora_workflow_collection_permissions_processing';
  //$collection_permissions_form['#theme'] = 'islandora_workflow_collection_permissions';
  
  dsm($collection_permissions_form);
  return $collection_permissions_form;
}
 
 /**
  * This function processes the form submitted from the collection permission page
  */
function islandora_workflow_collection_permissions_processing() {
  $output='';
  
  return $output;
}